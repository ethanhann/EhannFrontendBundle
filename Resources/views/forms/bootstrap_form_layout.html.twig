{#
    Form layout overriding twig's default form blocks
#}
{% extends 'form_div_layout.html.twig' %}

{# group form errors #}
{% block form_errors %}
    {% spaceless %}
        {% if errors|length > 0 %}
            <div class="container alerts">
                <div class="alert alert-error"><span><strong class="badge badge-important">Error!</strong>
                    <ul class="form-errors">
                    {% for error in errors %}
                        <li>{{
                        error.messagePluralization is null
                        ? error.messageTemplate|trans(error.messageParameters, 'validators')
                        : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators')
                        }}</li>
                    {% endfor %}
                    </ul>
                </span></div>
            </div>
        {% endif %}
    {% endspaceless %}
{% endblock form_errors %}

{#
    field rows - moved errors behind widget and added bootstrap classes to the div if error
        css adds red highlighting
#}
{% block form_row %}
    {% spaceless %}
        <div class="control-group{% if errors %} error{% endif %}">
            {{ form_label(form) }}
            <div class="controls">
                {{ form_widget(form) }}
                {{ form_errors(form) }}
            </div>
        </div>
    {% endspaceless %}
{% endblock form_row %}

{% block form_label %}
    {% spaceless %}
        {% if label is not sameas(false) %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' control-label')|trim}) %}
            {% if not compound %}
                {% set label_attr = label_attr|merge({'for': id}) %}
            {% endif %}
            {% if required %}
                {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
            {% endif %}
            {% if label is empty %}
                {% set label = name|humanize %}
            {% endif %}
            <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{{ label|trans({}, translation_domain) }}</label>
        {% endif %}
    {% endspaceless %}
{% endblock form_label %}


{#
    checkbox_row - generic checkbox row that does not generate label
#}
{% block checkbox_row %}
    {% spaceless %}
        <div{% if errors %} class="control-group error"{% endif %}>
            {{ form_widget(form) }}
            {{ form_errors(form) }}
        </div>
    {% endspaceless %}
{% endblock checkbox_row %}

{# widgets #}
{# datetime widget#}
{% block datetime_widget %}
{% spaceless %}
    {% if widget == 'single_text' %}
        <div class="datetimepicker input-append date">
            {{ block('form_widget_simple') }}
            <span class="add-on">
                <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
            </span>
        </div>
    {% else %}
        <div {{ block('widget_container_attributes') }}>
            {{ form_errors(form.date) }}
            {{ form_errors(form.time) }}
            {{ form_widget(form.date) }}
            {{ form_widget(form.time) }}
        </div>
    {% endif %}
{% endspaceless %}
{% endblock datetime_widget %}

{#
    radio buttons & checkboxes - next two blocks uses bootstrap css and makes them inline
        instead of being stacked vertically
    Removed form_label so label can be wrapped around the actual field
 #}
{% block choice_widget_expanded %}
    {% spaceless %}
        <div {{ block('widget_container_attributes') }}>
            {% for child in form %}
                {{ form_widget(child) }}
            {% endfor %}
        </div>
    {% endspaceless %}
{% endblock choice_widget_expanded %}

{# custom widget for enclosing radio input with label #}
{% use 'form_div_layout.html.twig' with radio_widget as base_radio_widget %}
{% block radio_widget %}
    {% if not compound %}
        {% set label_attr = label_attr|merge({
            'for': id,
            'class': label_attr.class|default('') ~ ' radio inline'
        }) %}
    {% endif %}
    {% if required %}
        {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
    {% endif %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}
    <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
        {{ block('base_radio_widget') }} {{ label|trans({}, translation_domain) }}
    </label>
{% endblock %}

{# custom widget for enclosing checkbox input with label #}
{% use 'form_div_layout.html.twig' with checkbox_widget as base_checkbox_widget %}
{% block checkbox_widget %}
    {% if not compound %}
        {% set label_attr = label_attr|merge({
        'for': id,
        'class': label_attr.class|default('') ~ ' checkbox'
        }) %}
    {% endif %}
    {% if required %}
        {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
    {% endif %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}
    <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
    {{ block('base_checkbox_widget') }} {{ label|trans({}, translation_domain) }}
    </label>
{% endblock %}


{# deprecated currently? comment in form_div_layout.html.twig also mentions removal in symfony 2.3 #}
{% block field_errors %}
    {% spaceless %}
        {% if errors|length > 0 %}
            <span class="help-inline">
                {% for error in errors %}
                    {% if loop.index > 1 %}<br />{% endif %}
                    {{
                        error.messagePluralization is null
                        ? error.messageTemplate|trans(error.messageParameters, 'validators')
                        : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators')
                    }}
                {% endfor %}
            </span>
        {% endif %}
    {% endspaceless %}
{% endblock field_errors %}
